{% extends 'baseEnseignant.html.twig' %}


{% block enTete %}

  <div class="jumbotron">
    <h1 class="display-4">Formulaire Titulaire</h1>
  </div>

{% endblock %}


{% block sideNav %}
  <div id="mySidenav" class="sidenav">
    <a href="javascript:void(0)" class="closebtn" onclick="closeNav()" id="close">&times;</a>
    <p id="nomcreneau">Nom du creneau</p>
    <p id="dateDebut"></p>
    <p id="dateFin"></p>
    <input type="text" name="titre" id="titrevt">
    <button id="apply">Appliquer le titre</button>
    <button id="remove">Supprimer ce créneau</button>
  </div>
{% endblock %}

{% block ZoneGaucheSaisiesContraintesHebdos %}
</br>
  {% include 'formulaireTit-contraintesHebdo-CarteHautGauche.html.twig'%}
</br>
{% include 'formulaireTit-contraintesHebdo-CarteBasGauche.html.twig'%}
{% endblock %}

{% block ZoneDroiteSaisiesContraintesHebdos %}

<div id="main">
  {{ formulaireTitulaire.texteHebdomadaire }}
  <div id='hebdo'></div>
</div>
</br>

{{ form_row(form.remarquesHebdo) }}



<center>
<button class="btn-primary" id="submit">
  <i class="fas fa-pencil-alt"></i>{{ button_label|default(' Envoyer ') }}</button>
</center>
{% endblock %}

{% block ZoneGaucheSaisiesContraintesPonctuelles %}
{% endblock %}

{% block ZoneCentreSaisiesContraintesPonctuelles %}



<div id="main">
  {{ formulaireTitulaire.textePonctuel }}
  <div id='mensuel'></div>
  </br>
  <center>
<script>  document.getElementById("form_remarquesHebdo").innerHTML = "{{remarqueH}}" ;</script>



{{ form_row(form.remarquesPonctu) }}

<script> document.getElementById("form_remarquesPonctu").innerHTML = "{{remarqueP}}" ;</script>

  <button class="btn-primary" id="submit2">
    <i class="fas fa-pencil-alt"></i>{{ button_label|default(' Envoyer ') }}</button>
  </center>

</div>
{% endblock %}

{% block javascripts %}

{{ parent() }}
<script>




function enregistrerUnCreneau(start, end, title, type="zoneGrisee", prio="sansPrio", enseignant="") {
  $.ajax({
    url: "{{path("creneau_ajouter")}}",
    data: {
      startevt: start,
      endevt: end,
      titleevt: title,
      typeevt: type,
      prioevt: prio,
      enseignantevt: enseignant,
    },
    type: "POST"
  });
}

function enregistrerDesRemarques(contenuRemarque1 , typeRemarque1 , contenuRemarque2, typeRemarque2, enseignant) {
  $.ajax({
    url: "{{path("remarque_ajouter")}}",
    data: {
      contenu1: contenuRemarque1,
      type1: typeRemarque1,
      contenu2: contenuRemarque2,
      type2: typeRemarque2,
      idEnseignant: enseignant,
    },
    type: "POST"
  });
}

function supprimerDesRemarques(enseignant) {
  $.ajax({
    url: "{{path("suppr_remarque")}}",
    data: {
      idEnseignant: enseignant,
    },
    type: "POST"
  });
}


function supprimerDesCreneaux(type, enseignant="") {
  $.ajax({
    url: "{{path("suppr_creneaux")}}",
    data: {
      typeCreneau: type,
      idEnseignant: enseignant,
    },
    type: "POST"
  });
}
//déterminer la couleur du fond de l'événement à utiliser en fonction du bouton radio coché
function detFond() {
  if (document.getElementById('proForte').checked) {
    fond = "#B84331";
  } else if (document.getElementById('proMoy').checked) {
    fond = "#FE8700";
  } else if (document.getElementById('proFaible').checked) {
    fond = "#FFD433";
    bordure = fond;
  } else if (document.getElementById('persForte').checked) {
    fond = "#8A47A9";
  } else if (document.getElementById('persMoy').checked) {
    fond = "#314AB8";
  } else if (document.getElementById('persFaible').checked) {
    fond = "#2EAED3";
  }
  return fond;
}
//Déterminer la couleur de la bordure de l'événement à utiliser en fonction du bouton radio coché
function detBord() {
  if (document.getElementById('proForte').checked) {
    bordure = "#B84331";
  } else if (document.getElementById('proMoy').checked) {
    bordure = "#FE8700";
  } else if (document.getElementById('proFaible').checked) {
    bordure = "#FAFE00";
  } else if (document.getElementById('persForte').checked) {
    bordure = "#8A47A9";
  } else if (document.getElementById('persMoy').checked) {
    bordure = "#314AB8";
  } else if (document.getElementById('persFaible').checked) {
    bordure = "#2EAED3";
  }
  return bordure;
}
function detPrio() {
  if (document.getElementById('proForte').checked || document.getElementById('persForte').checked) {
    prio = 'Forte';
  } else if (document.getElementById('proMoy').checked || document.getElementById('persMoy').checked) {
    prio = 'Moyenne';
  } else if (document.getElementById('proFaible').checked || document.getElementById('persFaible').checked) {
    prio = 'Faible';
  }
  return prio;
}
function detType() {
  if (document.getElementById('proForte').checked || document.getElementById('proMoy').checked || document.getElementById('proFaible').checked) {
    type = 'ContraintePro';
  } else if (document.getElementById('persForte').checked || document.getElementById('persMoy').checked || document.getElementById('persFaible').checked) {
    type = 'ContraintePerso';
  }
  return type;
}
function tempsParDefaut(){
          var defaultTime;
          var date;
          if(document.getElementById('proForte').checked) {
              defaultTime = {{formulaireTitulaire.dureeProForte}};
          }
          else if(document.getElementById('proMoy').checked) {
            defaultTime = {{formulaireTitulaire.dureeProMoy}};
          }
          else if(document.getElementById('proFaible').checked) {
            defaultTime = {{formulaireTitulaire.dureeProFaible}};
          }
          else if(document.getElementById('persForte').checked) {
            defaultTime = {{formulaireTitulaire.dureePersForte}};
          }
          else if(document.getElementById('persMoy').checked) {
            defaultTime = {{formulaireTitulaire.dureePersMoy}};
          }
          else if(document.getElementById('persFaible').checked) {
            defaultTime = {{formulaireTitulaire.dureePersFaible}};
          }
          date = defaultTime.toString().minsToHHMMSS();
          return date;
      }
String.prototype.minsToHHMMSS = function() {
  var mins_num = parseFloat(this, 10); // don't forget the second param
  var hours = Math.floor(mins_num / 60);
  var minutes = Math.floor((mins_num - ((hours * 3600)) / 60));
  var seconds = Math.floor((mins_num * 60) - (hours * 3600) - (minutes * 60));
  // Appends 0 when unit is less than 10
  if (hours < 10) {
    hours = "0" + hours;
  }
  if (minutes < 10) {
    minutes = "0" + minutes;
  }
  if (seconds < 10) {
    seconds = "0" + seconds;
  }
  return hours + ':' + minutes + ':' + seconds;
}

Date.prototype.addMinutes = function(m) {
  this.setTime(this.getTime() + (m*60*1000));
  return this;
}


function openNav() {
  document.getElementById("mySidenav").style.width = "250px";
  document.getElementById("main").style.marginRight = "250px";
}
/* Set the width of the side navigation to 0 and the left margin of the page content to 0 */
function closeNav() {
  document.getElementById("mySidenav").style.width = "0";
  document.getElementById("main").style.marginRight = "0";
}
var compteur = {
  ContraintePro : {
    proForte: 0,
    proMoy: 0,
    proFaible: 0
  },
  ContraintePerso : {
    persoForte: 0,
    persoMoy: 0,
    persoFaible: 0
  }
};
var limiteProForte = {{formulaireTitulaire.quantiteProForte}};
var limiteProMoy = {{formulaireTitulaire.quantiteProMoy}};
var limiteProFaible = {{formulaireTitulaire.quantiteProFaible}};
var limitePersForte = {{formulaireTitulaire.quantitePersForte}};
var limitePersMoy = {{formulaireTitulaire.quantitePersMoy}};
var limitePersFaible = {{formulaireTitulaire.quantitePersFaible}};
function limiteDepassee(){
var res = false;
  if( document.getElementById('proForte').checked) {
    if(compteur.ContraintePro.proForte >= limiteProForte )
    {
      res = true;
    }
  }
  else if(document.getElementById('proMoy').checked) {
    if(compteur.ContraintePro.proMoy >= limiteProMoy )
    {
      res = true;
    }
  }
  else if(document.getElementById('proFaible').checked) {
    if(compteur.ContraintePro.proFaible >= limiteProFaible )
    {
      res = true;
    }
  }
  else if(document.getElementById('persForte').checked) {
    if(compteur.ContraintePerso.persoForte >= limitePersForte )
    {
      res = true;
    }
  }
  else if(document.getElementById('persMoy').checked) {
    if(compteur.ContraintePerso.persoMoy >= limitePersMoy )
    {
      res = true;
    }
  }
  else if(document.getElementById('persFaible').checked) {
    if(compteur.ContraintePerso.persoFaible >= limitePersFaible )
    {
      res = true;
    }
  }
return res;
}



var saisieEnseignant= true; //Active le code permettant d'enregistrer et de supprimer les créneaux pour un enseignant donné
var modifications = false; //Active le drag and drop des événements, à désactiver pour les vues de saisie puisque la durée d'un événement ne doit pas être modifiable
var echelle = "{{formulaireTitulaire.echelleCalendrier}}".minsToHHMMSS();
var heureDebut = "{{ formulaireTitulaire.heureDebutCalendrier|date("H:i:s")}}";
var heureFin = "{{formulaireTitulaire.heureFinCalendrier|date("H:i:s")}}";
var events = {{events|raw}};
var enseignant = {{enseignant.id}};
var eventsMensuel = {{eventsMensuel|raw}};



var estFormulaireTitulaire = true;




</script>
{% endblock %}
